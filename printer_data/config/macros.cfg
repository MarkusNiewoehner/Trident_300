##
[gcode_macro PRINT_START]
gcode:
  SET_PRESSURE_ADVANCE EXTRUDER=extruder SMOOTH_TIME=0.016
  SET_VELOCITY_LIMIT ACCEL=15000
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=5
  G90
  M107
  #SET_FAN_SPEED FAN=Umluft SPEED=0.5
  SET_FAN_SPEED FAN=Umluft SPEED=1.0
  #SET_FAN_SPEED FAN=Abluft SPEED=0.1
  SET_FAN_SPEED FAN=Abluft SPEED=0.1
  SKEW_PROFILE load=off
  CG28 
  M220 S100
  M221 S100
  #M106 S255
  CLEAN_NOZZLE
  Attach_Probe_Lock
  Z_TILT_ADJUST
  CLEAN_NOZZLE
  G28 Z
  CALIBRATE_Z
  dock_probe_unlock
  PURGE_NOZZLE
  STATUS_PRINTING
  SKEW_PROFILE load=my_skew_profile
  set_nozzle_leds_on
  G0 X200 F4000
  G0 Y290 F40000
  BED_MESH_PROFILE LOAD=default
  #SET_GCODE_OFFSET Z=-0.3
  M107
  

[gcode_macro PRINT_END]
gcode:
    SKEW_PROFILE load=off
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    M400                           ; wait for buffer to clear
    TURN_OFF_HEATERS
    G92 E0 ; zero the extruder
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} E-0.5 F20000  ; move nozzle to remove stringing
    Parkposition  ; park nozzle at rear               
    G1 E-10.0 F3000               ; retract filament
    M107                  ; turn off fan
    STATUS_READY
    #BED_MESH_CLEAR
    M84 #Motoren aus
    SET_FAN_SPEED FAN=Abluft SPEED=1.0
    SET_FAN_SPEED FAN=Umluft SPEED=0
    TURNOFF_EXHAUST
  

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    SKEW_PROFILE load=off
    SET_FAN_SPEED FAN=Abluft SPEED=1.0
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    G91
    G1 E-10.0 F3000               ; retract filament
    G1 Z10
    G90
    Parkposition  ; park nozzle at rear
    M107                                     ; turn off fan
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    STATUS_READY
    M84

[gcode_macro Rolle_wechseln]
gcode:
  CG28
  G90
  G1 X100 Y308 F20000
  G1 Z240


[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-70} MAXIMUM={s+30}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-2} MAXIMUM={s+20}  ; Wait for bed temp (within 1 degree)
    {% endif %}

[gcode_macro CHANGE_NOZZLE]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=250
    Druckkopf_nach_vorn

[gcode_macro PREHEAT]
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=240
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=90
  SET_FAN_SPEED FAN=Umluft SPEED=0.6
  SET_FAN_SPEED FAN=Abluft SPEED=0
  M106 S255
  CG28
  G0 X150 Y50 Z100


[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[gcode_macro FLUSH_NOZZLE]
gcode:
    M109 S240
    CG28
    STATUS_CLEANING
    PURGE_NOZZLE
    G1 E-20 F600
    G4 P5000
    CLEAN_NOZZLE

[gcode_macro Parkposition]
gcode:
    CG28
    G90
    SET_VELOCITY_LIMIT ACCEL=5000
    G0 X294 Y307 F10000

[gcode_macro Druckkopf_mittig]
gcode:
    CG28
    G90
    G0 X150 Y150 Z140 F36000 

[gcode_macro PURGE_NOZZLE]
gcode:
    G90
   # M106 S255
    G0 X280 Y307 Z1 F36000
    G91
    G1 E50.0 F300 
    G1 E-0.5 F600
    M107
    G90
    G0 X210 F10000
    
[gcode_macro CLEAN_NOZZLE]
variable_start_x: 210
variable_start_y: 309
variable_start_z: 0
variable_wipe_dist: 50
variable_wipe_qty: 5
variable_wipe_spd: 200
variable_raise_distance: 6
gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 #M106 S255
  STATUS_CLEANING
 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F30000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}
 #M107
  STATUS_READY

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

[gcode_macro Motor_XY_aus]
gcode:
    SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

[gcode_macro ACCELEROMETER_TEST]
gcode:
  ACCELEROMETER_QUERY

[gcode_macro SHAPER_CALIBRATE_X]
gcode:
  CG28
  SHAPER_CALIBRATE AXIS=X

[gcode_macro SHAPER_CALIBRATE_Y]
gcode:
  CG28
  SHAPER_CALIBRATE AXIS=Y
  
[gcode_macro G34]
gcode:
    G28
    QUAD_GANTRY_LEVEL

[gcode_macro ACCELEROMETER_TEST]
gcode:
  ACCELEROMETER_QUERY

[gcode_macro SHAPER_CALIBRATE_X]
gcode:
  CG28
  SHAPER_CALIBRATE AXIS=X

[gcode_macro SHAPER_CALIBRATE_Y]
gcode:
  CG28
  SHAPER_CALIBRATE AXIS=Y

[gcode_macro Druckkopf_nach_vorn]
gcode:
  G90
  CG28
  G0 X100 Y5 Z220 F36000

[gcode_macro PID_extruder]
gcode:
    PID_CALIBRATE heater=extruder target=250

[gcode_macro PID_Bed]
gcode:
  PID_CALIBRATE heater=heater_bed target=100

[gcode_macro Z_CALIBRATE]
gcode:
  CLEAN_NOZZLE
  CALIBRATE_Z

[gcode_macro Luefter_aus]
gcode:
  M107
  SET_FAN_SPEED FAN=Umluft SPEED=0
  SET_FAN_SPEED FAN=Abluft SPEED=0

[gcode_macro Umluft_aus]
gcode:
  SET_FAN_SPEED FAN=Umluft SPEED=0

[gcode_macro Umluft_halb]
gcode:
  SET_FAN_SPEED FAN=Umluft SPEED=0.5

[gcode_macro Umluft_voll]
gcode:
  SET_FAN_SPEED FAN=Umluft SPEED=1.0

[gcode_macro Abluft_voll]
gcode:
  SET_FAN_SPEED FAN=Abluft SPEED=1.0

[gcode_macro Abluft_halb]
gcode:
  SET_FAN_SPEED FAN=Abluft SPEED=0.5

[gcode_macro Abluft_aus]
gcode:
  SET_FAN_SPEED FAN=Abluft SPEED=0

[gcode_macro BED_MESH_PEI]
gcode:
  BED_MESH_CALIBRATE PROFILE="pei"

[gcode_macro BED_MESH_Prinplate]
gcode:
  BED_MESH_CALIBRATE PROFILE="prinplate"

[gcode_macro TEST_RESONANCES_MOTOR_B]
gcode:
  TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data

[gcode_macro TEST_RESONANCES_MOTOR_A]
gcode: 
  TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data

[force_move]
# Enable commands that force potentially unsafe movement
enable_force_move: True

[gcode_macro UNSAFE_BED_DOWN]
description: Lower the bed 80mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z80 F600
  M84

### SHUTOFF THE MASCHINE AFTER PRINT
[output_pin RELAY_PIN]
#configure the relay signal pin SKRpro V1.2 EXT1 port
pin = PE11

[gcode_macro _TURNOFF_MAINS]
#change relays state to off
gcode:
  SET_PIN PIN=RELAY_PIN VALUE=1


[gcode_macro TURNOFF_AFTERPRINT]
#if the hotend temperature falls below 50, mains is switched off
gcode:
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM=0 MAXIMUM=50
  _turnoff_mains

[gcode_macro TURNOFF_EXHAUST]
#if the hotend temperature falls below 50, mains is switched off
gcode:
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM=0 MAXIMUM=150
  SET_FAN_SPEED FAN=Abluft SPEED=0



